# This file can be directly executed ! 

# On a new machine
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install -y gcc-5 g++-5
sudo update-alternatives 
sudo update-alternatives --remove-all gcc
sudo update-alternatives --remove-all g++
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 20
sudo update-alternatives --config gcc
sudo update-alternatives --config g++

sudo apt-get install -y cmake git xfsprogs sysstat gdb

# Packages to install

sudo apt-get install -y libaio1 libaio1-dbg libaio-dev
sudo apt-get install -y libz-dev libbz2-dev
sudo apt-get install -y libboost-all-dev libgoogle-glog-dev

# Install google test
cd ~
git clone  https://github.com/google/googletest
(cd googletest; mkdir build; cd build; cmake ..; sudo make install)
cd -

#========================

# Build gobjfs

(cd gobjfs; mkdir build; cd build; cmake ..; make)

#========================

# To run clang static analyzer

sudo apt-add-repository "deb http://llvm.org/apt/trusty/llvm-toolchain-trusty-3.8 main"
sudo apt-get update
sudo apt-get install -y clang-3.8 lldb-3.8


(cd gobjfs; cd build; \
  cmake -DCMAKE_C_COMPILER=/usr/lib/llvm-3.8/libexec/ccc-analyzer \
    -DCMAKE_CXX_COMPILER=/usr/lib/llvm-3.8/libexec/c++-analyzer ..; \
  scan-build make)


#=========================

To run address sanitizer

(cd gobjfs; cd build; cmake -DCMAKE_BUILD_TYPE=ASan ..; make)

#=========================

To run cppcheck

sudo apt-get install -y cppcheck

(cd gobjfs; cd build; make cppcheck)

#========================

To run clang-format

sudo apt-add-repository "deb http://llvm.org/apt/trusty/llvm-toolchain-trusty-3.8 main"
sudo apt-get update
sudo apt-get install -y clang-format-3.8

(cd gobjfs; cd build; make clangformat)
